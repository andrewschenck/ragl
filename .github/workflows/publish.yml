name: TestPyPI & PyPI Publish

on:
  push:
    branches: ["**"]
    tags: ["v*"]
  pull_request:
  release:
    types: [published]        # Trigger publish-pypi on published releases

jobs:
  code-quality:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -e .[test]

      - name: Run mypy
        run: mypy

      - name: Run ruff check
        run: ruff check

  functional-tests:
    needs: code-quality
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install -e .[test]

      - name: Run functional tests
        run: coverage run -m pytest tests/

      - name: Generate coverage report
        run: |
          coverage report --show-missing
          coverage html

      - name: Check coverage threshold
        run: coverage report --fail-under=100

      - name: Upload coverage reports
        if: matrix.python-version == '3.11'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  integration-tests:
    needs: [code-quality, functional-tests]
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis/redis-stack:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: [ "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: pip install -e .[test]

      - name: Run integration tests
        env:
          REDIS_URL: redis://localhost:6379
        run: pytest tests/integration/sentencetransformer_redis.py

  all-tests:
    needs: [code-quality, functional-tests, integration-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.code-quality.result }}" != "success" ]]; then
            echo "CI FAILURE: code-quality status is ${{ needs.code-quality.result }}"
            exit 1
          fi
          if [[ "${{ needs.functional-tests.result }}" != "success" ]]; then
            echo "CI FAILURE: functional-tests status is ${{ needs.functional-tests.result }}"
            exit 1
          fi
          if [[ "${{ needs.integration-tests.result }}" != "success" ]]; then
            echo "CI FAILURE: integration-tests status is ${{ needs.integration-tests.result }}"
            exit 1
          fi
          echo "All tests passed!"

  publish-testpypi:
    if: startsWith(github.ref, 'refs/tags/v') && github.event_name != 'release'
    needs: all-tests
    environment: test-release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build package
        run: |
          python -m pip install --upgrade build
          python -m build

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    if: github.event_name == 'release'
    needs: all-tests
    environment: release
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Build package
        run: |
          python -m pip install --upgrade build
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
